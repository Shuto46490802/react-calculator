{"version":3,"sources":["Button.js","Formula.js","Output.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","buttonStyle","isNaN","children","chuildren","backgroundColor","id","style","onClick","handleClick","Formula","Output","App","useState","on","setOn","input","setInput","prevValue","setPrevValue","operator","setOperator","formula","setFormula","calc","setCalc","useEffect","setTimeout","addNumberToInput","value","operatorRegex","test","parseFloat","String","length","slice","calculatePrevValue","floatLeft","float","floatRight","onStyle","clacStyle","className","class","currValue","toString","evaluate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.051eba6c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Button.css\";\n\nconst Button = (props) => {\n\n  const buttonStyle = !isNaN(props.children) || props.children === \".\"\n  ? {backgroundColor : \"#3F3F3F\"}\n  : isNaN(props.chuildren) && props.children !== \"AC\"\n  ? {backgroundColor : \"#707070\"}\n  : props.children === \"AC\"\n  ? {backgroundColor : \"#B73225\"}\n  : {};\n\n  return(\n    <button \n    id=\"button-wrapper\"\n    style={buttonStyle}\n    onClick={() => {props.handleClick(props.children)}}\n    >\n        {props.children}\n    </button>\n  )\n}\n\nexport default Button;","import React from \"react\";\nimport \"./Formula.css\";\n\nconst Formula = (props) => {\n  return(\n    <div id=\"formula-wrapper\">\n        {props.children}\n    </div>\n  )\n}\n\nexport default Formula;","import React from \"react\";\nimport \"./Output.css\";\n\nconst Output = (props) => {\n  return(\n    <div id=\"output-wrapper\">\n        {props.children}\n    </div>\n  )\n}\n\nexport default Output;","import React, {useEffect, useState } from \"react\";\nimport Button from \"./Button\";\nimport Formula from \"./Formula\";\nimport Output from \"./Output\";\nimport \"./App.css\";\nimport { evaluate } from 'mathjs';\n\n\nconst App = () => {\n\n  const [on, setOn] = useState(true);\n  const [input, setInput] = useState(0);\n  const [prevValue, setPrevValue] = useState(\"\");\n  const [operator, setOperator] = useState(\"\");\n  const [formula, setFormula] = useState(\"\");\n  const [calc, setCalc] = useState(true);\n  \n  useEffect(() => {\n    setInput(\"WELCOME\");\n    setTimeout(() => {\n      setInput(0)\n    }, 1500)\n  },[])\n\n  const toggleOn = () => {\n    setOn(!on);\n    if(on){\n      setInput(\"\");\n      setFormula(\"\");\n    }else{\n      setInput(\"WELCOME\");\n      setTimeout(() => {setInput(0)}, 1500);\n    }\n  };\n\n  const toggleCalc = () => {\n    setCalc(!calc);\n    if(on){\n      if(!calc){\n        setFormula(\"\");\n        setOperator(\"\");\n        setPrevValue(\"\");\n        setInput(\"IMMEDIATE\");\n        setTimeout(() => {\n          setInput(0);\n        },1000);\n      }else{\n        setFormula(\"\");\n        setOperator(\"\");\n        setPrevValue(\"\");\n        setInput(\"FORMULA\");\n        setTimeout(() => {\n          setInput(0);\n        },1000);\n      }\n    }else{\n      return;\n    }\n  };\n\n  const addNumberToInput = (value) => {\n    if(on){\n      var operatorRegex = /[-+xÃ·]$/;\n      var decimalRegex = /[.]/g;\n      if(value === \".\"){\n        if(!decimalRegex.test(input)){\n          setInput(input + value);\n          setFormula(formula + value);\n        }if(input === 0 ||operatorRegex.test(input)){\n          setFormula(formula + 0 + value);\n          setInput(0 + value);\n        }\n      }\n      if(!isNaN(value)){\n        setFormula(formula + value);\n        setInput(parseFloat(input + value));\n      }\n      if(operatorRegex.test(input)){\n        setInput(\"\");\n        setTimeout(() => {setInput(value)});\n      }\n      if(String(input).length > 14){\n        setInput(String(\"DIGIT LIMIT MET\"));\n        setTimeout(() => {\n          setInput(input);\n        },1000);\n        setFormula(formula.slice(0, formula.length));\n      }\n      }else{\n        return;\n      }\n  };\n\n  const allClear = () => {\n    if(on){\n      setInput(0);\n      setFormula(\"\");\n      setPrevValue(\"\");\n      setOperator(\"\");\n    }else{\n      return;\n    }\n  }\n\n  const handleDelete = () => {\n    if(on){\n      if(input !== \"\"){\n        setInput(String(input).slice(0, String(input).length -1));\n        setFormula(formula.slice(0, formula.length - 1));\n      }else{\n        return;\n      }\n    }else{\n      return;\n    } \n  };\n\n  const plusMinus = () => {\n    if(on){\n      setFormula(formula * -1);\n      setInput(input * -1);\n    }else{\n      return;\n    }\n  };\n\n  const toPercent = () => {\n    if(on){\n      setFormula(formula / 100);\n      setInput(input / 100);\n    }\n  };\n\n  const calculatePrevValue = () => {\n    if(on){\n      if(!isNaN(parseFloat(input))){\n        if(operator === \"plus\"){\n          setPrevValue(parseFloat(prevValue) + parseFloat(input));\n        }else if(operator === \"subtract\"){\n          var doubleMinus = /[-]{2}/;\n          if(doubleMinus.test(formula)){\n            setPrevValue(parseFloat(prevValue) + parseFloat(input));\n          }else{\n            setPrevValue((parseFloat(prevValue)) - (parseFloat(input)));\n          }\n        }else if(operator === \"multiply\"){\n          setPrevValue(parseFloat(prevValue) * parseFloat(input));\n        }else if(operator === \"divide\"){\n          setPrevValue(parseFloat(prevValue) / parseFloat(input));\n        }\n        }\n      }else{\n        return;\n      }\n  };\n\n  const add = (value) => {\n    if(on){\n      var operatorRegex = /[-+xÃ·]$/;\n      if(calc){\n        if(operator !== \"\"){\n          calculatePrevValue();\n        }else{\n          setPrevValue(parseFloat(input));\n        }\n        if(operatorRegex.test(formula)){\n          setFormula(formula.slice(0, formula.length - 1) + value);\n        }else{\n          setFormula(formula + value);\n        }\n        setInput(\"\");\n        setTimeout(() => {setInput(value)});\n        setOperator(\"plus\");\n      }else{\n        if(!operatorRegex.test(formula)){\n          setFormula(formula + value);\n        }else{\n          setFormula(formula.slice(0, formula.length - 1) + value);\n        }\n        setInput(\"\");\n        setTimeout(() => {setInput(value)});\n      }\n    }else{\n        return;\n    } \n  };\n\n  const subtract = (value) => {\n    if(on){\n      var operatorRegex = /[+xÃ·]$/;\n      if(calc){\n        var doubleMinus = /[-]{2}$/;\n        if(operator !== \"\"){\n          calculatePrevValue();\n        }else{\n          setPrevValue(parseFloat(input));\n        }\n        if(operatorRegex.test(formula)){\n          setFormula(formula.slice(0, formula.length - 1) + value);\n        }else{\n          setFormula(formula + value);\n        }\n        if(doubleMinus.test(formula)){\n          setFormula(formula.slice(0, formula.length - 1) + value);\n        }\n        setInput(\"\");\n        setTimeout(() => {setInput(value)});\n        setOperator(\"subtract\");\n      }else{\n        if(!operatorRegex.test(formula)){\n          setFormula(formula + value);\n        }else{\n          setFormula(formula.slice(0, formula.length - 1) + value);\n        }\n        setInput(\"\");\n        setTimeout(() => {setInput(value)});\n      }\n    }else{\n      return;\n    }  \n  };\n\n  const multiply = (value) => {\n    if(on){\n      var operatorRegex = /[-+xÃ·]$/;\n      var operatorFormula = /[-+*/]$/;\n      if(calc){\n        if(operator !== \"\"){\n          calculatePrevValue();\n        }else{\n          setPrevValue(parseFloat(input));\n        }\n        if(operatorRegex.test(formula)){\n          setFormula(formula.slice(0, formula.length - 1) + value);\n        }else{\n          setFormula(formula + value);\n        }\n        setInput(\"\");\n        setTimeout(() => {setInput(value)});\n        setOperator(\"multiply\");\n      }else{\n        if(!operatorFormula.test(formula)){\n          setFormula(formula + \"*\");\n        }else{\n          setFormula(formula.slice(0, formula.length - 1) + \"*\");\n        }\n        setInput(\"\");\n        setTimeout(() => {setInput(value)});\n      }\n    }else{\n      return;\n    } \n  };\n\n  const divide = (value) => {\n    if(on){\n    var operatorRegex = /[-+xÃ·]$/;\n    var operatorFormula = /[-+*/]$/;\n      if(calc){\n        if(operator !== \"\"){\n          calculatePrevValue();\n        }else{\n          setPrevValue(parseFloat(input));\n        }\n        if(operatorRegex.test(formula)){\n          setFormula(formula.slice(0, formula.length - 1) + value)\n        }else{\n          setFormula(formula + value);\n        }\n        setInput(\"\");\n        setTimeout(() => {setInput(value)});\n        setOperator(\"divide\");\n      }else{\n        if(!operatorFormula.test(formula)){\n          setFormula(formula + \"/\");\n        }else{\n          setFormula(formula.slice(0, formula.length - 1) + \"/\");\n        }\n        setInput(\"\");\n        setTimeout(() => {setInput(value)});\n      }\n    }else{\n      return;\n    } \n  };\n\n  const getEvaluate = (value) => {\n    if(on){\n      if(calc){\n        var currValue = parseFloat(input);\n        if(!isNaN(parseFloat(currValue))){\n        if(operator === \"plus\"){\n          setInput(prevValue + currValue);\n          setFormula(formula + value + (prevValue + currValue).toString());\n        }else if(operator === \"subtract\"){\n          var doubleMinus = /[-]{2}/;\n          if(doubleMinus.test(formula)){\n            setInput(prevValue + currValue);\n            setFormula(formula + value + (prevValue + currValue).toString());\n          }else{\n            setInput(prevValue - currValue);\n            setFormula(formula + value + (prevValue - currValue).toString());\n          }\n        }else if(operator === \"multiply\"){\n          setInput(prevValue * currValue);\n          setFormula(formula + value + (prevValue * currValue).toString());\n        }else if(operator === \"divide\"){\n          setInput(prevValue / currValue);\n          setFormula(formula + value + (prevValue / currValue).toString());\n        }\n      }\n        setOperator(\"\");\n      }else{\n        setFormula(formula + \"=\" + evaluate(String(formula)));\n        setInput(evaluate(String(formula)));\n      }\n    }else{\n      return;\n    }\n  };\n\n    const floatLeft = {\n      float : \"left\"\n    };\n    const floatRight = {\n      float : \"right\"\n    };\n\n    const onStyle = on\n    ? floatLeft\n    : floatRight;\n\n    const clacStyle = calc\n    ? floatLeft \n    : floatRight\n\n  return(\n    <div id=\"calculator\">\n      <div className=\"row\">\n        <Formula>\n          {formula}\n        </Formula>\n      </div>\n      <div className=\"row\">\n          <Output>\n            {input}\n          </Output>\n      </div>\n      <div id=\"switches\">\n        <div class =\"switch\" id=\"switch\" onClick={toggleOn}>\n          ON\n          <div class=\"switch-wrapper\">\n            <div style={onStyle} class=\"button\">\n            </div>\n          </div>\n        </div>\n        <div class =\"switch\" id=\"calc\" onClick={toggleCalc}>\n          CALC\n          <div class=\"switch-wrapper\">\n            <div style={clacStyle} class=\"button\">\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id=\"buttons\">\n        <Button handleClick={addNumberToInput}>7</Button>\n        <Button handleClick={addNumberToInput}>8</Button>\n        <Button handleClick={addNumberToInput}>9</Button>\n        <Button handleClick={handleDelete}>DEL</Button>\n        <Button handleClick={allClear}>AC</Button> \n        <Button handleClick={addNumberToInput}>4</Button>\n        <Button handleClick={addNumberToInput}>5</Button>\n        <Button handleClick={addNumberToInput}>6</Button>\n        <Button handleClick={multiply}>x</Button>\n        <Button handleClick={divide}>Ã·</Button>\n        <Button handleClick={addNumberToInput}>1</Button>\n        <Button handleClick={addNumberToInput}>2</Button>\n        <Button handleClick={addNumberToInput}>3</Button>\n        <Button handleClick={add}>+</Button>\n        <Button handleClick={subtract}>-</Button>\n        <Button handleClick={addNumberToInput}>0</Button>\n        <Button handleClick={addNumberToInput}>.</Button>\n        <Button handleClick={plusMinus}>Â±</Button>\n        <Button handleClick={toPercent}>%</Button>\n        <Button handleClick={getEvaluate}>=</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}